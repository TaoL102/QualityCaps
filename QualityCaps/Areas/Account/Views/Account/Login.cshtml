@using QualityCaps.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<section>


    <div class="container">
        <div class="row">
            <div class="col-md-4 col-md-offset-4 col-sm-6 col-sm-offset-3">
                <div class="card card-signup">
                    @using (Html.BeginForm("Login", "Account", new { area = "Account", ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form", role = "form", id = "loginForm" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="header header-primary text-center">
                            <h4>Log in</h4>
                            <div class="social-line">
                                <a href="#pablo" class="btn btn-simple btn-just-icon">
                                    <i class="fa fa-facebook-square"></i>
                                </a>
                                <a href="#pablo" class="btn btn-simple btn-just-icon">
                                    <i class="fa fa-twitter"></i>
                                </a>
                                <a href="#pablo" class="btn btn-simple btn-just-icon">
                                    <i class="fa fa-google-plus"></i>
                                </a>
                            </div>
                        </div>
                            <p class="text-divider">Or Be Classical</p>
                                <div class="content">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div class="input-group">
                                        <span class="input-group-addon">
                                            <i class="material-icons">email</i>
                                        </span>
                                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email..." })
                                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="input-group">
                                        <span class="input-group-addon">
                                            <i class="material-icons">lock_outline</i>
                                        </span>
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password..." })
                                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(m => m.RememberMe)
                                            @Html.LabelFor(m => m.RememberMe)
                                        </label>
                                    </div>

                                </div>
                                <div class="footer text-center">
                                    <a href="javascript:document.getElementById('loginForm').submit()" class="btn btn-simple btn-primary btn-lg">Log in</a>
                                </div>
                    }
                    @Html.ActionLink("Register as a new user", "Register", new { area = "Account" })
                </div>
            </div>
        </div>
    </div>






    @* Enable this once you have account confirmation enabled for password reset functionality
        <p>
            @Html.ActionLink("Forgot your password?", "ForgotPassword")
        </p>*@


    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <section id="socialLoginForm">
                    @Html.Partial("~/Areas/Account/Views/Account/_ExternalLoginsListPartial.cshtml", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                </section>
            </div>
        </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</section>